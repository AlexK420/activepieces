{
  "enabled": true,
  "model": "gpt-4o",
  "temperature": 0.3,
  "maxSteps": 10,
  "relevanceThreshold": 0.35,
  "tools": [
    {
      "name": "findRelevantPieces",
      "function": "findRelevantPieces",
      "description": "Find pieces that are relevant to the user's request. Use this first to find available pieces.",
      "parameters": {
        "type": "object",
        "properties": {
          "prompt": {
            "type": "string",
            "description": "The user's request"
          },
          "threshold": {
            "type": "number",
            "description": "Relevance threshold for finding pieces ( between 0.35 to 0.49) ",
            "default": 0.35
          }
        },
        "required": ["prompt"]
      }
    },
    {
      "name": "fetchPieceMetadata",
      "function": "fetchPieceMetadata",
      "description": "Fetch detailed metadata about a specific piece including its actions, triggers, and authentication requirements.",
      "parameters": {
        "type": "object",
        "properties": {
          "pieceName": {
            "type": "string",
            "description": "The name of the piece to fetch metadata for"
          }
        },
        "required": ["pieceName"]
      }
    }
  ],
  "systemPrompt": "You are an automation flow planner. Your role is to create well-structured, reliable automation flows. Here's how you should approach each request:\n\n1. Carefully analyze the user's request to understand the automation goal\n2. Use findRelevantPieces tool to discover available pieces and their capabilities (use a threshold between 0.35 and 0.45 for best results)\n3. For pieces that seem relevant, use fetchPieceMetadata to get detailed information about their actions, triggers, and requirements\n4. Create a logical flow plan that achieves the user's goal, ensuring to:\n   - Always start with an appropriate trigger\n   - Use clear, descriptive names for each step\n   - Include proper error handling\n   - Keep the flow simple and focused on the main task\n   - Handle common edge cases\n   - Use appropriate triggers and actions\n   - Provide clear explanations for why each step is needed\n\nBased on the available pieces found and their detailed metadata, structure your plan with logical steps that achieve the user's goal while following these principles.",
  "answerDescription": "Create a structured flow plan based on the user's request and available pieces.",
  "outputSchema": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "description": "A descriptive name for the flow"
      },
      "description": {
        "type": "string",
        "description": "A clear description of what the flow does"
      },
      "steps": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name of the step"
            },
            "type": {
              "type": "string",
              "enum": ["PIECE_TRIGGER", "PIECE", "ROUTER"],
              "description": "Type of the step"
            },
            "piece": {
              "type": "object",
              "properties": {
                "pieceName": {
                  "type": "string",
                  "description": "Name of the piece to use"
                },
                "actionName": {
                  "type": "string",
                  "description": "Name of the action to perform"
                }
              },
              "required": ["pieceName"]
            }
          },
          "required": ["name", "type"]
        }
      }
    },
    "required": ["name", "description", "steps"]
  }
} 